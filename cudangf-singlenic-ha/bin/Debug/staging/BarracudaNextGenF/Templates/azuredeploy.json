{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "allowedValues": [
                "East US",
                "West US",
                "West Europe",
                "North Europe",
                "East Asia",
                "Southeast Asia"
            ],
            "metadata": {
                "description": "Location to deploy"
            }
        },
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
            }
        },
        "vmName": {
            "type": "string"
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the NG."
            }
        },
        "dnsNameForLBIP": {
            "type": "string",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the NG."
            }
        },
        "vNetResourceGroup": {
            "type": "string"
        },
        "vNETName": {
            "type": "string"
        },

        "subnetName": {
            "type": "string",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the WAF."
            }
        },
        "subnetMask": {
            "type": "string"

        },
    "license": {
            "allowedValues": [ "hourly", "byol" ],
        "type": "string",
        "metadata": {
            "description": "Hourly (PAYG) or BYOL (Bring your own) license"
        }
    },
      "vmSize": {

        "type": "string",
        "allowedValues": [
          "Standard_A1",
          "Standard_A2",
          "Standard_A3",
          "Standard_A4"
        ],
        "metadata": {
          "description": "Size of instances"
        }
      },
      "subnetGatewayIP": {
        "type": "string",
        "metadata": {
          "description": "The IP of the subnets gateway including the subnets mask. e.g 10.0.0.1/25"
        }
      }



    },
  "variables": {
    "NGAVSetName": "[concat(parameters('vmName'),'AV')]",
    "nicNamePrefix": "[concat(parameters('vmName'),'NIC')]",
    "adminUsername": "azureuser",
    "imagePublisher": "barracudanetworks",
    "imageOffer": "barracuda-ng-firewall",
    "numberOfInstances": 2,
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "NGLBIP",
    "loadBalancerName": "[concat(parameters('vmName'),'LB')]",
    "publicIPAddressType": "Dynamic",
    "vmStorageAccountContainerName": "vhds",
    "vnetID": "[resourceId(parameters('VNetResourceGroup'),'Microsoft.Network/virtualNetworks',parameters('vNETName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
    "PublicIPID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "NGPIPID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('nicNamePrefix'))]",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontend')]",
    "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/loadBalancerBackend')]",
    "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]",
    "subnetSplit": "[split(parameters('subnetMask'),'.')]",
    "4thOctet": "[split(variables('subnetSplit')[3],'/')]",
    "InternalIPs": [
      "[concat(variables('subnetSplit')[0],'.',variables('subnetSplit')[1],'.',variables('subnetSplit')[2],'.',string(add(int(variables('4thOctet')[0]),4)))]",
      "[concat(variables('subnetSplit')[0],'.',variables('subnetSplit')[1],'.',variables('subnetSplit')[2],'.',string(add(int(variables('4thOctet')[0]),5)))]"
    ],

    "CustomData": [
      "[base64(concat('{\"version\" : \"1.0\", \"dha\" : { \"flags\" : [\"primary\"], \"ip\" : \"', variables('InternalIPs')[0], '\", \"haip\" : \"', variables('InternalIPs')[1], '\", \"gateway\" : \"', parameters('subnetGatewayIP'), '\", \"password\" : \"', parameters('adminPassword'), '\" }}'))]",
      "[base64(concat('{\"version\" : \"1.0\", \"dha\" : { \"haip\" : \"', variables('InternalIPs')[1], '\", \"gateway\" : \"', parameters('subnetGatewayIP'), '\", \"password\" : \"', parameters('adminPassword'), '\" }}'))]"
    ]
  },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageAccountName')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "StorageAccount"
            },
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "LoadBalancedNGIP"
            },
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsNameForLBIP')]"
                }
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('nicNamePrefix'), copyindex(1))]",
            "copy": {
                "name": "PIPLoop",
                "count": "[variables('numberOfInstances')]"
            },
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Static"

            }
        },
        {
            "name": "[variables('NGAVSetName')]",
            "type": "Microsoft.Compute/availabilitySets",
            "location": "[parameters('location')]",
            "apiVersion": "2015-06-15",
            "dependsOn": [ ],
            "tags": {
                "displayName": "NGAVSet"
            }
        },

        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicNamePrefix'), copyindex(1))]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "nicLoop",
                "count": "[variables('numberOfInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]",
                "[concat('Microsoft.Network/publicIPAddresses/',variables('nicNamePrefix'), copyindex(1))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('InternalIPs')[copyIndex()]]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses/', concat(variables('nicNamePrefix'), copyindex(1)))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(variables('lbID'), '/backendAddressPools/LoadBalancerBackend')]"
                                }
                            ],
                            "enableIPForwarding": true


                        }

                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "name": "[variables('loadBalancerName')]",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "ngLB"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"

            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "loadBalancerFrontEnd",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('PublicIPID')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "loadBalancerBackend"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "TinaUDP",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID')]"
                            },
                            "protocol": "udp",
                            "frontendPort": 691,
                            "backendPort": 691,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[variables('lbProbeID')]"
                            }
                        }
                    },

                    {
                        "name": "IPSec4500",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID')]"
                            },
                            "protocol": "udp",
                            "frontendPort": 4500,
                            "backendPort": 4500,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[variables('lbProbeID')]"
                            }
                        }
                    },
                    {
                        "name": "IPSec500",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID')]"
                            },
                            "protocol": "udp",
                            "frontendPort": 500,
                            "backendPort": 500,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[variables('lbProbeID')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "tcpProbe",
                        "properties": {
                            "protocol": "tcp",
                            "port": 691,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('vmName'), copyindex(1))]",
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[variables('numberOfInstances')]"
            },
            "location": "[parameters('location')]",
            "plan": {
                "name": "[parameters('license')]",
                "Product": "barracuda-ng-firewall",
                "Publisher": "barracudanetworks"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicNamePrefix'), copyindex(1))]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('NGAVSetName'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('NGAVSetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('vmName'), copyindex(1))]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "customData": "[variables('CustomData')[copyIndex()]]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('license')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/',parameters('vmName'),'osdisk', copyindex(1), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicNamePrefix'),copyindex(1)))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net')]"
                    }
                }
            }
        }



    ]
   
}

